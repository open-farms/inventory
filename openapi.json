{
  "info": {
    "title": "Inventory API",
    "description": "An API for agriculture inventory management.",
    "termsOfService": "",
    "contact": {},
    "license": {
      "name": ""
    },
    "version": "0.0.0"
  },
  "paths": {
    "/categories": {
      "get": {
        "summary": "List Categories",
        "description": "List Categories.",
        "tags": [
          "Category"
        ],
        "operationId": "listCategory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Category list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category1462705340View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a new Category",
        "description": "Creates a new Category and persists it to storage.",
        "tags": [
          "Category"
        ],
        "operationId": "createCategory",
        "requestBody": {
          "description": "Category to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "create_time",
                  "name",
                  "update_time"
                ],
                "properties": {
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "equipment": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "implement": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "location": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "tool": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "vehicle": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category1462705340View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "summary": "Find a Category by ID",
        "description": "Finds the Category with the requested ID and returns it.",
        "tags": [
          "Category"
        ],
        "operationId": "readCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Category",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category1462705340View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Category by ID",
        "description": "Deletes the Category with the requested ID.",
        "tags": [
          "Category"
        ],
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Category to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Updates a Category",
        "description": "Updates a Category and persists changes to storage.",
        "tags": [
          "Category"
        ],
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Category to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Category properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "create_time",
                  "name",
                  "update_time"
                ],
                "properties": {
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "equipment": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "implement": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "location": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "tool": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "vehicle": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category1462705340View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/categories/{id}/equipment": {
      "get": {
        "summary": "Find the attached Equipment",
        "description": "Find the attached Equipment of the Category with the given ID",
        "tags": [
          "Category"
        ],
        "operationId": "listCategoryEquipment",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Category",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Equipment attached to Category with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Equipment3958372643View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/categories/{id}/implement": {
      "get": {
        "summary": "Find the attached Implements",
        "description": "Find the attached Implements of the Category with the given ID",
        "tags": [
          "Category"
        ],
        "operationId": "listCategoryImplement",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Category",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Implements attached to Category with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Implement1296325875View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/categories/{id}/location": {
      "get": {
        "summary": "Find the attached Locations",
        "description": "Find the attached Locations of the Category with the given ID",
        "tags": [
          "Category"
        ],
        "operationId": "listCategoryLocation",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Category",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Locations attached to Category with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location948740745View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/categories/{id}/tool": {
      "get": {
        "summary": "Find the attached Tools",
        "description": "Find the attached Tools of the Category with the given ID",
        "tags": [
          "Category"
        ],
        "operationId": "listCategoryTool",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Category",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tools attached to Category with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tool178816486View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/categories/{id}/vehicle": {
      "get": {
        "summary": "Find the attached Vehicles",
        "description": "Find the attached Vehicles of the Category with the given ID",
        "tags": [
          "Category"
        ],
        "operationId": "listCategoryVehicle",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Category",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicles attached to Category with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vehicle1702989761View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/equipment": {
      "get": {
        "summary": "List Equipment",
        "description": "List Equipment.",
        "tags": [
          "Equipment"
        ],
        "operationId": "listEquipment",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Equipment list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Equipment3958372643View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a new Equipment",
        "description": "Creates a new Equipment and persists it to storage.",
        "tags": [
          "Equipment"
        ],
        "operationId": "createEquipment",
        "requestBody": {
          "description": "Equipment to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "condition",
                  "create_time",
                  "location",
                  "name",
                  "update_time"
                ],
                "properties": {
                  "category": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "condition": {
                    "type": "string"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "location": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Equipment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment3958372643View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/equipment/{id}": {
      "get": {
        "summary": "Find a Equipment by ID",
        "description": "Finds the Equipment with the requested ID and returns it.",
        "tags": [
          "Equipment"
        ],
        "operationId": "readEquipment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Equipment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Equipment with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment3958372643View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Equipment by ID",
        "description": "Deletes the Equipment with the requested ID.",
        "tags": [
          "Equipment"
        ],
        "operationId": "deleteEquipment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Equipment to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Equipment with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Updates a Equipment",
        "description": "Updates a Equipment and persists changes to storage.",
        "tags": [
          "Equipment"
        ],
        "operationId": "updateEquipment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Equipment to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Equipment properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "condition",
                  "create_time",
                  "location",
                  "name",
                  "update_time"
                ],
                "properties": {
                  "category": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "condition": {
                    "type": "string"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "location": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Equipment updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment3958372643View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/equipment/{id}/category": {
      "get": {
        "summary": "Find the attached Category",
        "description": "Find the attached Category of the Equipment with the given ID",
        "tags": [
          "Equipment"
        ],
        "operationId": "readEquipmentCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Equipment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category attached to Equipment with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category1462705340View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/equipment/{id}/location": {
      "get": {
        "summary": "Find the attached Location",
        "description": "Find the attached Location of the Equipment with the given ID",
        "tags": [
          "Equipment"
        ],
        "operationId": "readEquipmentLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Equipment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location attached to Equipment with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location948740745View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/implements": {
      "get": {
        "summary": "List Implements",
        "description": "List Implements.",
        "tags": [
          "Implement"
        ],
        "operationId": "listImplement",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Implement list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Implement1296325875View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a new Implement",
        "description": "Creates a new Implement and persists it to storage.",
        "tags": [
          "Implement"
        ],
        "operationId": "createImplement",
        "requestBody": {
          "description": "Implement to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "create_time",
                  "location",
                  "name",
                  "update_time"
                ],
                "properties": {
                  "category": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "location": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Implement created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implement1296325875View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/implements/{id}": {
      "get": {
        "summary": "Find a Implement by ID",
        "description": "Finds the Implement with the requested ID and returns it.",
        "tags": [
          "Implement"
        ],
        "operationId": "readImplement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Implement",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Implement with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implement1296325875View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Implement by ID",
        "description": "Deletes the Implement with the requested ID.",
        "tags": [
          "Implement"
        ],
        "operationId": "deleteImplement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Implement to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Implement with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Updates a Implement",
        "description": "Updates a Implement and persists changes to storage.",
        "tags": [
          "Implement"
        ],
        "operationId": "updateImplement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Implement to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Implement properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "create_time",
                  "location",
                  "name",
                  "update_time"
                ],
                "properties": {
                  "category": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "location": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Implement updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implement1296325875View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/implements/{id}/category": {
      "get": {
        "summary": "Find the attached Category",
        "description": "Find the attached Category of the Implement with the given ID",
        "tags": [
          "Implement"
        ],
        "operationId": "readImplementCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Implement",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category attached to Implement with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category1462705340View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/implements/{id}/location": {
      "get": {
        "summary": "Find the attached Location",
        "description": "Find the attached Location of the Implement with the given ID",
        "tags": [
          "Implement"
        ],
        "operationId": "readImplementLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Implement",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location attached to Implement with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location948740745View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/locations": {
      "get": {
        "summary": "List Locations",
        "description": "List Locations.",
        "tags": [
          "Location"
        ],
        "operationId": "listLocation",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Location list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location948740745View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a new Location",
        "description": "Creates a new Location and persists it to storage.",
        "tags": [
          "Location"
        ],
        "operationId": "createLocation",
        "requestBody": {
          "description": "Location to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "create_time",
                  "name",
                  "update_time",
                  "zone"
                ],
                "properties": {
                  "category": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "equipment": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "implement": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "tool": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "vehicle": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "zone": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location948740745View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "summary": "Find a Location by ID",
        "description": "Finds the Location with the requested ID and returns it.",
        "tags": [
          "Location"
        ],
        "operationId": "readLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location948740745View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Location by ID",
        "description": "Deletes the Location with the requested ID.",
        "tags": [
          "Location"
        ],
        "operationId": "deleteLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Location with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Updates a Location",
        "description": "Updates a Location and persists changes to storage.",
        "tags": [
          "Location"
        ],
        "operationId": "updateLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Location properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "create_time",
                  "name",
                  "update_time",
                  "zone"
                ],
                "properties": {
                  "category": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "equipment": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "implement": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "tool": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "vehicle": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "zone": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location948740745View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/locations/{id}/category": {
      "get": {
        "summary": "Find the attached Category",
        "description": "Find the attached Category of the Location with the given ID",
        "tags": [
          "Location"
        ],
        "operationId": "readLocationCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category attached to Location with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category1462705340View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/locations/{id}/equipment": {
      "get": {
        "summary": "Find the attached Equipment",
        "description": "Find the attached Equipment of the Location with the given ID",
        "tags": [
          "Location"
        ],
        "operationId": "listLocationEquipment",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Equipment attached to Location with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Equipment3958372643View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/locations/{id}/implement": {
      "get": {
        "summary": "Find the attached Implements",
        "description": "Find the attached Implements of the Location with the given ID",
        "tags": [
          "Location"
        ],
        "operationId": "listLocationImplement",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Implements attached to Location with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Implement1296325875View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/locations/{id}/tool": {
      "get": {
        "summary": "Find the attached Tools",
        "description": "Find the attached Tools of the Location with the given ID",
        "tags": [
          "Location"
        ],
        "operationId": "listLocationTool",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tools attached to Location with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tool178816486View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/locations/{id}/vehicle": {
      "get": {
        "summary": "Find the attached Vehicles",
        "description": "Find the attached Vehicles of the Location with the given ID",
        "tags": [
          "Location"
        ],
        "operationId": "listLocationVehicle",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicles attached to Location with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vehicle1702989761View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tools": {
      "get": {
        "summary": "List Tools",
        "description": "List Tools.",
        "tags": [
          "Tool"
        ],
        "operationId": "listTool",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Tool list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tool178816486View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a new Tool",
        "description": "Creates a new Tool and persists it to storage.",
        "tags": [
          "Tool"
        ],
        "operationId": "createTool",
        "requestBody": {
          "description": "Tool to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "create_time",
                  "location",
                  "name",
                  "powered",
                  "update_time"
                ],
                "properties": {
                  "category": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "location": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  },
                  "powered": {
                    "type": "boolean"
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tool created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool178816486View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tools/{id}": {
      "get": {
        "summary": "Find a Tool by ID",
        "description": "Finds the Tool with the requested ID and returns it.",
        "tags": [
          "Tool"
        ],
        "operationId": "readTool",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Tool",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tool with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool178816486View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Tool by ID",
        "description": "Deletes the Tool with the requested ID.",
        "tags": [
          "Tool"
        ],
        "operationId": "deleteTool",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Tool to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tool with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Updates a Tool",
        "description": "Updates a Tool and persists changes to storage.",
        "tags": [
          "Tool"
        ],
        "operationId": "updateTool",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Tool to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Tool properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "create_time",
                  "location",
                  "name",
                  "powered",
                  "update_time"
                ],
                "properties": {
                  "category": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "location": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  },
                  "powered": {
                    "type": "boolean"
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tool updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool178816486View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tools/{id}/category": {
      "get": {
        "summary": "Find the attached Category",
        "description": "Find the attached Category of the Tool with the given ID",
        "tags": [
          "Tool"
        ],
        "operationId": "readToolCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Tool",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category attached to Tool with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category1462705340View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tools/{id}/location": {
      "get": {
        "summary": "Find the attached Location",
        "description": "Find the attached Location of the Tool with the given ID",
        "tags": [
          "Tool"
        ],
        "operationId": "readToolLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Tool",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location attached to Tool with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location948740745View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/vehicles": {
      "get": {
        "summary": "List Vehicles",
        "description": "List Vehicles.",
        "tags": [
          "Vehicle"
        ],
        "operationId": "listVehicle",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Vehicle list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vehicle1702989761View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a new Vehicle",
        "description": "Creates a new Vehicle and persists it to storage.",
        "tags": [
          "Vehicle"
        ],
        "operationId": "createVehicle",
        "requestBody": {
          "description": "Vehicle to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "active",
                  "create_time",
                  "hours",
                  "location",
                  "make",
                  "model",
                  "update_time"
                ],
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hours": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "location": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "make": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "power": {
                    "type": "string"
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "year": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vehicle created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle1702989761View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/vehicles/{id}": {
      "get": {
        "summary": "Find a Vehicle by ID",
        "description": "Finds the Vehicle with the requested ID and returns it.",
        "tags": [
          "Vehicle"
        ],
        "operationId": "readVehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Vehicle",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle1702989761View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Vehicle by ID",
        "description": "Deletes the Vehicle with the requested ID.",
        "tags": [
          "Vehicle"
        ],
        "operationId": "deleteVehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Vehicle to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Vehicle with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Updates a Vehicle",
        "description": "Updates a Vehicle and persists changes to storage.",
        "tags": [
          "Vehicle"
        ],
        "operationId": "updateVehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Vehicle to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Vehicle properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "active",
                  "create_time",
                  "hours",
                  "location",
                  "make",
                  "model",
                  "update_time"
                ],
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hours": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "location": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "make": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "power": {
                    "type": "string"
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "year": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vehicle updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle1702989761View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/vehicles/{id}/location": {
      "get": {
        "summary": "Find the attached Location",
        "description": "Find the attached Location of the Vehicle with the given ID",
        "tags": [
          "Vehicle"
        ],
        "operationId": "readVehicleLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Vehicle",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location attached to Vehicle with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location948740745View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category1462705340View": {
        "type": "object",
        "required": [
          "create_time",
          "id",
          "name",
          "update_time"
        ],
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Equipment3958372643View": {
        "type": "object",
        "required": [
          "condition",
          "create_time",
          "id",
          "name",
          "update_time"
        ],
        "properties": {
          "condition": {
            "type": "string"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Implement1296325875View": {
        "type": "object",
        "required": [
          "create_time",
          "id",
          "name",
          "update_time"
        ],
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Location948740745View": {
        "type": "object",
        "required": [
          "create_time",
          "id",
          "name",
          "update_time",
          "zone"
        ],
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          },
          "zone": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Tool178816486View": {
        "type": "object",
        "required": [
          "create_time",
          "id",
          "name",
          "powered",
          "update_time"
        ],
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "powered": {
            "type": "boolean"
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Vehicle1702989761View": {
        "type": "object",
        "required": [
          "active",
          "create_time",
          "hours",
          "id",
          "make",
          "model",
          "update_time"
        ],
        "properties": {
          "active": {
            "type": "boolean"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "hours": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "make": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "power": {
            "type": "string"
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          },
          "year": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 400
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Bad Request"
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "user misses permission",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 403
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 404
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Not Found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 409
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Conflict"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 500
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {}
  },
  "openapi": "3.0.3"
}